
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- General Public Read Collections ---
    match /academic_categories/{categoryId} {
      allow read: if request.auth != null;
      // allow write: if isAdmin(); // Example for future admin role
    }
    
    match /academic_tools/{toolId} {
      allow read: if request.auth != null;
    }
    
    match /academic_articles/{articleId} {
      allow read: if request.auth != null;
    }
    
    // --- User Profile Rules ---
    match /users/{userId} {
      allow read: if request.auth != null; // Allow any logged-in user to view profiles
      allow create: if request.auth != null && request.auth.uid == userId; // User can create their own profile document
      allow update: if request.auth != null && request.auth.uid == userId; // User can update their own profile
    }

    // --- Career Page Collections ---
    match /connections/{connectionId} {
      // Users can create a connection request
      allow create: if request.auth != null && request.resource.data.senderId == request.auth.uid;
      // Involved users can read or update (e.g., accept/reject)
      allow read, update: if request.auth != null && (request.auth.uid == resource.data.senderId || request.auth.uid == resource.data.receiverId);
      // Involved users can delete
      allow delete: if request.auth != null && (request.auth.uid == resource.data.senderId || request.auth.uid == resource.data.receiverId);
    }

    match /conversations/{conversationId} {
      // Only participants can read conversation metadata
      allow read, update: if request.auth != null && request.auth.uid in resource.data.participants;

      // Messages subcollection
      match /messages/{messageId} {
        // Only participants can read messages
        allow read: if request.auth != null && get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants.hasAny([request.auth.uid]);
        // Only participants can send messages
        allow create: if request.auth != null && request.resource.data.senderId == request.auth.uid && get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants.hasAny([request.auth.uid]);
      }
    }
    
    match /profile_views/{viewId} {
       // A user can create a view record if they are the viewer
      allow create: if request.auth != null && request.resource.data.viewerId == request.auth.uid;
    }

    match /career_help_posts/{postId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    // --- Application Form Collections ---
    function isOwner(collectionName) {
      return get(/databases/$(database)/documents/$(collectionName)/$(request.resource.id)).data.userId == request.auth.uid;
    }
    
    match /study_participants/{docId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read, update: if request.auth != null && isOwner('study_participants');
    }

    match /student_community_applications/{docId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read, update: if request.auth != null && isOwner('student_community_applications');
    }

    match /professional_applications/{docId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read, update: if request.auth != null && isOwner('professional_applications');
    }
    
    match /circle_applications/{docId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read, update: if request.auth != null && isOwner('circle_applications');
    }

    match /mentor_applications/{docId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read, update: if request.auth != null && isOwner('mentor_applications');
    }

    // --- Other Collections ---
    match /subscriptions/{docId} {
      allow create: if request.auth != null; // Allow any authenticated user to subscribe
    }

    match /user_academic_progress/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /academic_chat_sessions/{sessionId} {
      allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    // --- Assessment Collections ---
    match /asm1_sessions/{sessionId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read, update: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    
    match /asm1_reports/{reportId} {
        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
        allow read: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    match /asm2_sessions/{sessionId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read, update: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    
    match /asm2_reports/{reportId} {
        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
        allow read: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    match /asm3_sessions/{sessionId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read, update: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    
    match /asm3_reports/{reportId} {
        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
        allow read: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    match /asm4_sessions/{sessionId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read, update: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    
    match /asm4_reports/{reportId} {
        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
        allow read: if request.auth != null && resource.data.userId == request.auth.uid;
    }
  }
}
