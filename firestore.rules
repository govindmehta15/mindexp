
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isPublicRead() {
      return request.method == 'get' || request.method == 'list';
    }

    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }

    // Users: Public can read, only owner can write.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if isOwner(userId);
    }
    
    // Connections: Only involved users can interact.
    match /connections/{connectionId} {
      allow read, write: if request.auth.uid == resource.data.senderId || request.auth.uid == resource.data.receiverId;
      allow create: if isOwner(request.resource.data.senderId);
    }

    // Conversations & Messages: Only participants can interact.
    match /conversations/{conversationId} {
      allow read, write: if request.auth.uid in resource.data.participants;
      allow create: if request.auth.uid in request.resource.data.participants;
      
      match /messages/{messageId} {
        allow read, write: if get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants.hasAny([request.auth.uid]);
        allow create: if get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants.hasAny([request.auth.uid]);
      }
    }
    
    // Subscriptions: Anyone can create (subscribe). No one can read/update/delete.
    match /subscriptions/{subId} {
      allow create: if true;
      allow read, update, delete: if false;
    }

    // --- Assessment Rules ---
    
    // ASM1 Sessions
    match /asm1_sessions/{sessionId} {
      allow read: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
      allow update: if isOwner(resource.data.userId);
    }
    
    // ASM1 Reports
    match /asm1_reports/{reportId} {
      allow read: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }

    // ASM2 Sessions
    match /asm2_sessions/{sessionId} {
      allow read: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
      allow update: if isOwner(resource.data.userId);
    }
    
    // ASM2 Reports
    match /asm2_reports/{reportId} {
      allow read: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }

    // --- Application Forms: Users can only create their own. Admins can read. ---
    
    function isApplicationOwner() {
      return isOwner(request.resource.data.userId);
    }

    match /study_participants/{appId} {
      allow create: if isApplicationOwner();
      allow read: if false; // Should be admin-only
    }
    
    match /student_community_applications/{appId} {
      allow create: if isApplicationOwner();
      allow read: if false; // Should be admin-only
    }
    
    match /professional_applications/{appId} {
      allow create: if isApplicationOwner();
      allow read: if false; // Should be admin-only
    }
    
    match /circle_applications/{appId} {
      allow create: if isApplicationOwner();
      allow read: if false; // Should be admin-only
    }
    
    match /mentor_applications/{appId} {
      allow create: if isApplicationOwner();
      allow read: if false; // Should be admin-only
    }

    // --- Academic & Career Content: Publicly readable ---
    
    match /academic_categories/{categoryId} {
      allow read: if isPublicRead();
    }
    
    match /academic_tools/{toolId} {
      allow read: if isPublicRead();
    }
    
    match /academic_articles/{articleId} {
      allow read: if isPublicRead();
    }
    
    // User-specific academic progress: Only owner can access.
    match /user_academic_progress/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // Academic chat sessions: Only owner can access.
    match /academic_chat_sessions/{sessionId} {
      allow read, write: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }
    
    // Research Proposals: Users can create their own. Admins can read.
    match /research_proposals/{proposalId} {
      allow create: if isOwner(request.resource.data.userId);
      allow read: if false; // Should be admin-only
    }
  }
}
